name: Docker Build and Push to ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY_URI: 100927400596.dkr.ecr.ap-northeast-2.amazonaws.com/spring

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3 

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ env.ECR_REPOSITORY_URI }}

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker Image to ECR
        run: |
          docker buildx build --platform linux/amd64 \
            --tag ${{ env.ECR_REPOSITORY_URI }}:latest \
            --tag ${{ env.ECR_REPOSITORY_URI }}:${{ github.sha }} \
            --push .

      - name: Notify Discord
        if: success()
        run: |
          curl -X POST "https://discord.com/api/v10/channels/1357169309050212432/messages" \
            -H "Authorization: Bot ${{ secrets.DISCORD_BOT_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "content": "[Spring Backend] ECR Ïù¥ÎØ∏ÏßÄ ÎπåÎìú Î∞è Ìë∏Ïãú ÏôÑÎ£å!\n  Repo: ${{ github.repository }}\nüîÄ Commit: ${{ github.sha }}\nüë§ By: ${{ github.actor }}"
            }'
